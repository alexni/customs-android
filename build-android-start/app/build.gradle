apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "ru.renelogist.chat"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 6
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    signingConfigs {
        debug { /* здесь никаких изменений нет */ }
        release {
            v1SigningEnabled=true
            v2SigningEnabled=true
            if (project.hasProperty("Keys.repo")) {
                def projectPropsFile = file(project.property("Keys.repo") + "/build-android-start.properties")
                if (projectPropsFile.exists()) {
                    Properties props = new Properties()
                    props.load(new FileInputStream(projectPropsFile))
                    storeFile file(file(project.property("Keys.repo") + props['RELEASE_STORE_FILE']))
                    storePassword props['RELEASE_STORE_PASS']
                    keyAlias props['RELEASE_ALIAS']
                    keyPassword props['RELEASE_KEY_PASS']
                }
            } else {
                println "======================================================="
                println "[ERROR] - Please configure release-compilation environment - e.g. in ~/.signing directory"
                println "======================================================="
            }

            buildTypes {
                release {
                    minifyEnabled true
                    shrinkResources true
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    signingConfig signingConfigs.release
                }
            }
        }
    }
}

dependencies {
    configurations.all {
        resolutionStrategy.force 'com.android.support:design:28.0.0'
    }

    testImplementation 'junit:junit:4.12'

    implementation "androidx.appcompat:appcompat:1.1.0-alpha02"

    implementation 'com.android.support:design:28.0.0'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'de.hdodenhof:circleimageview:1.3.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'

    // Google
    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:17.0.0')
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.google.firebase:firebase-database:18.0.0'
    implementation 'com.google.firebase:firebase-storage:18.0.0'
    implementation 'com.google.firebase:firebase-auth:18.0.0'


    // Firebase UI
    implementation 'com.firebaseui:firebase-ui-database:3.3.1'

    // Testing dependencies
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'

    //Test Fairy integration
    implementation 'testfairy:testfairy-android-sdk:1.+@aar'
    compile "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}

